{% extends "commerce/_layouts/settingscp" %}

{% set crumbs = [
{ label: "Commerce Settings"|t, url: url('commerce/settings') },
{ label: "Shipping Methods"|t, url: url('commerce/settings/shippingmethods') },
] %}

{% set fullPageForm = true %}

{% import "_includes/forms" as forms %}

    {% set tabs = {
    0: {'label':'Shipping Method'|t,'url':'#shipping-method-tab'}
    }
    %}
    {% if not newMethod %}
        {%  set tabs = tabs|merge({1: {'label':'Rules'|t,'url':'#rules'}}) %}
    {% endif %}


{% block saveButton %}
    <input type="submit" class="btn submit" value="{{ newMethod ? 'Save and set rules'|t :'Save'|t }}">
{% endblock %}

{% block content %}
<div id="shipping-method-tab">
    <input type="hidden" name="action" value="commerce/shippingMethods/save">
    <input type="hidden" name="redirect" value="commerce/settings/shippingmethods/{id}#rules">
    {% if shippingMethod.id %}<input type="hidden" name="shippingMethodId" value="{{ shippingMethod.id }}">{% endif %}

    {{ forms.textField({
        first: true,
        label: "Name"|t,
        instructions: "What this shipping method will be called in the CP."|t,
        id: 'name',
        name: 'name',
        value: shippingMethod.getName(),
        errors: shippingMethod.getErrors('name'),
        autofocus: true,
        required: true,
    }) }}

    {{ forms.textField({
        first: true,
        label: "Handle"|t,
        instructions: "How this shipping method will be referred to in templates and forms."|t,
        id: 'handle',
        class: 'code',
        name: 'handle',
        value: shippingMethod.handle,
        errors: shippingMethod.getErrors('handle'),
        required: true,
    }) }}


    {{ forms.checkboxField({
        label: "Enable this shipping method on the front end"|t,
        id: 'enabled',
        name: 'enabled',
        value: 1,
        checked: shippingMethod.enabled,
        errors: shippingMethod.getErrors('enabled')
    }) }}

</div>

<div id="rules" class="hidden">

<h2>{{ "Shipping Rules"|t }}</h2>

<div id="no-shipping-rules"{% if shippingRules|length %} class="hidden"{% endif %}>
    <p>{{ "No shipping rules exist yet."|t }}</p>
</div>

{% if shippingRules|length %}
<table id="shipping-rules" class="data fullwidth collapsible">
    <thead>
    <tr>
        <th>{{ 'Name'|t }}</th>
        <th>{{ 'Description'|t }}</th>
        <td class="thin"></td>
        <td class="thin"></td>
    </tr>
    </thead>
    <tbody>
    {% for shippingRule in shippingRules %}
        <tr data-id="{{ shippingRule.id }}" data-name="{{ shippingRule.name }}">
            <th scope="row" data-title="{{ 'Name'|t }}">
                {% if shippingRule.enabled %}
                    <span class="status green"></span>
                {% else %}
                    <span class="status"></span>
                {% endif %}
                <a href="{{ url('commerce/settings/shippingmethods/'~shippingRule.methodId~'/shippingrules/'~shippingRule.id) }}">{{ shippingRule.name }}</a>
            </th>
            <td>{{ shippingRule.description }}</td>
            <td class="thin">
                <a class="move icon disabled" title="{{ 'Delete'|t }}" role="button"></a>
            </td>
            <td class="thin">
                <a class="delete icon" title="{{ 'Delete'|t }}" role="button"></a>
            </td>
        </tr>
    {% endfor %}

    </tbody>
</table>
{% endif %}

<div class="buttons">
    <a href="{{ url('commerce/settings/shippingmethods/'~shippingMethod.id~'/shippingrules/new') }}" class="btn submit add icon">{{ 'New shipping rule'|t }}</a>
</div>

</div>
{% endblock %}

{% includejs %}
{% if not shippingMethod.id %}new Craft.HandleGenerator('#name', '#handle');{% endif %}
var adminTable = new Craft.AdminTable({
    tableSelector: '#shipping-rules',
    noObjectsSelector: '#no-shipping-rules',
    deleteAction: 'commerce/shippingRules/delete',
    sortable: true,
    reorderAction: 'commerce/shippingRules/reorder',
    reorderSuccessMessage: Craft.t('Rules reordered.'),
    reorderFailMessage:    Craft.t('Couldn’t reorder rules..'),
    confirmDeleteMessage:  Craft.t('Are you sure you want to delete “{name}”?'),
    deleteSuccessMessage:  Craft.t('“{name}” deleted.'),
    deleteFailMessage:     Craft.t('Couldn’t delete “{name}”.'),
});
{% endincludejs %}
